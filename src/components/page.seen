import React, { useContext, useEffect, useState } from 'react';
import { OrderContext } from '../context/OrderContext'; // Import the OrderContext

const OrdersPage = () => {
  const { orders, getOrdersByUser } = useContext(OrderContext); // Get orders from context
  const [loading, setLoading] = useState(true);

  // Function to fetch orders when the component mounts
  useEffect(() => {
    const userId = localStorage.getItem('userId'); // Get the user ID (you might want to store this in a global state or context)

    const fetchOrders = async () => {
      try {
        await getOrdersByUser(userId); // Fetch orders using the context function
      } catch (error) {
        console.error('Error fetching orders:', error);
      } finally {
        setLoading(false);
      }
    };

    fetchOrders();
  }, [getOrdersByUser]); // Run when the component mounts

  if (loading) {
    return <div>Loading...</div>; // Show loading message while fetching
  }

  if (!orders || orders.length === 0) {
    return <div>No orders found.</div>; // Show a message if no orders are found
  }

  return (
    <div className="orders-page">
      <h1>Your Orders</h1>
      <div className="orders-list">
        {orders.map((order) => (
          <div key={order._id} className="order-card">
            <h2>Order #{order._id}</h2>
            <p>Status: {order.status}</p>
            <p>Total Amount: ${order.totalAmount}</p>
            <p>Delivery Address: {order.address}</p>
            <h3>Items:</h3>
            <ul>
              {order.items.map((item, index) => (
                <li key={index}>
                  <strong>{item.product}</strong> (x{item.quantity}) - ${item.price} each
                </li>
              ))}
            </ul>
          </div>
        ))}
      </div>
    </div>
  );
};

export default OrdersPage;
